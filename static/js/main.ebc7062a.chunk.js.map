{"version":3,"sources":["store/slices/songsSlice.js","store/slices/moviesSlice.js","store/index.js","components/MoviePlaylist.js","data/index.js","components/SongPlaylist.js","App.js","index.js"],"names":["songsSlice","createSlice","name","initialState","reducers","addSong","state","action","push","payload","removeSong","index","indexOf","splice","extraReducers","builder","addCase","reset","_songsSlice$actions","actions","songsReducer","reducer","moviesSlice","addMovie","removeMovie","_moviesSlice$actions","moviesReducer","createAction","store","configureStore","songs","movies","MoviePlaylist","dispatch","useDispatch","renderedMovies","useSelector","map","movie","_jsxs","children","_jsx","onClick","handleMovieRemove","className","concat","faker","word","adjective","noun","SongPlaylist","renderedSongs","song","handleSongRemove","music","songName","App","rootElement","document","getElementById","createRoot","render","Provider"],"mappings":"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","file":"static/js/main.ebc7062a.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { reset } from \"../index\";\n\nexport const songsSlice = createSlice({\n  name: \"song\",\n  initialState: [],\n  reducers: {\n    addSong(state, action) {\n      state.push(action.payload);\n    },\n    removeSong(state, action) {\n      //return state?.filter((song) => song !== action.payload);\n      const index = state.indexOf(action.payload);\n      state.splice(index, 1);\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(reset, (state, action) => {\n      return [];\n    });\n  }\n});\n\nexport const { addSong, removeSong } = songsSlice.actions;\nexport const songsReducer = songsSlice.reducer;\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { reset } from \"../index\";\n\nconst moviesSlice = createSlice({\n  name: \"movie\",\n  initialState: [],\n  reducers: {\n    addMovie(state, action) {\n      state.push(action.payload);\n    },\n    removeMovie(state, action) {\n      const index = state.indexOf(action.payload);\n      state.splice(index, 1);\n    }\n  },\n  extraReducers(builder) {\n    builder.addCase(reset, (state, action) => {\n      return [];\n    });\n  }\n});\n\nexport const { addMovie, removeMovie } = moviesSlice.actions;\nexport const moviesReducer = moviesSlice.reducer;\n","import { configureStore, createAction } from \"@reduxjs/toolkit\";\nimport { songsReducer, addSong, removeSong } from \"./slices/songsSlice\";\nimport { moviesReducer, addMovie, removeMovie } from \"./slices/moviesSlice\";\n\nconst reset = createAction(\"app/reset\");\n\nconst store = configureStore({\n  reducer: {\n    songs: songsReducer,\n    movies: moviesReducer\n  }\n});\n\nexport { store, reset, addSong, removeSong, addMovie, removeMovie };\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { createRandomMovie } from \"../data\";\nimport { addMovie, removeMovie } from \"../store\";\n\nfunction MoviePlaylist() {\n  const dispatch = useDispatch();\n  const moviePlaylist = useSelector((state) => state.movies);\n\n  const handleMovieAdd = (movie) => {\n    dispatch(addMovie(movie));\n  };\n  const handleMovieRemove = (movie) => {\n    dispatch(removeMovie(movie));\n  };\n\n  const renderedMovies = moviePlaylist.map((movie) => {\n    return (\n      <li key={movie}>\n        {movie}\n        <button\n          onClick={() => handleMovieRemove(movie)}\n          className=\"button is-danger\"\n        >\n          X\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"content\">\n      <div className=\"table-header\">\n        <h3 className=\"subtitle is-3\">Movie Playlist</h3>\n        <div className=\"buttons\">\n          <button\n            onClick={() => handleMovieAdd(createRandomMovie())}\n            className=\"button is-link\"\n          >\n            + Add Movie to Playlist\n          </button>\n        </div>\n      </div>\n      <ul>{renderedMovies}</ul>\n    </div>\n  );\n}\n\nexport default MoviePlaylist;\n","import { faker } from \"@faker-js/faker/locale/en\";\n\n// This file has nothing to do with Redux\n// It exports functions that create random\n// movies and song\n\nexport const createRandomMovie = () => {\n  return `${faker.word.adjective()} ${faker.word.noun()}`;\n};\n\nexport const createRandomSong = () => {\n  return faker.music.songName();\n};\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { createRandomSong } from \"../data\";\nimport { addSong, removeSong } from \"../store\";\n\nfunction SongPlaylist() {\n  const dispatch = useDispatch();\n  const songPlaylist = useSelector((state) => {\n    return state.songs;\n  });\n\n  const handleSongAdd = (song) => {\n    dispatch(addSong(song));\n  };\n  const handleSongRemove = (song) => {\n    dispatch(removeSong(song));\n  };\n\n  const renderedSongs = songPlaylist.map((song) => {\n    return (\n      <li key={song}>\n        {song}\n        <button\n          onClick={() => handleSongRemove(song)}\n          className=\"button is-danger\"\n        >\n          X\n        </button>\n      </li>\n    );\n  });\n\n  return (\n    <div className=\"content\">\n      <div className=\"table-header\">\n        <h3 className=\"subtitle is-3\">Song Playlist</h3>\n        <div className=\"buttons\">\n          <button\n            onClick={() => handleSongAdd(createRandomSong())}\n            className=\"button is-link\"\n          >\n            + Add Song to Playlist\n          </button>\n        </div>\n      </div>\n      <ul>{renderedSongs}</ul>\n    </div>\n  );\n}\n\nexport default SongPlaylist;\n","import \"./styles.css\";\nimport MoviePlaylist from \"./components/MoviePlaylist\";\nimport SongPlaylist from \"./components/SongPlaylist\";\nimport { useDispatch } from \"react-redux\";\nimport { reset } from \"./store\";\n\nexport default function App() {\n  const dispatch = useDispatch();\n  const handleResetClick = () => {\n    dispatch(reset());\n  };\n\n  return (\n    <div className=\"container is-fluid\">\n      <button onClick={() => handleResetClick()} className=\"button is-danger\">\n        Reset Both Playlists\n      </button>\n      <hr />\n      <MoviePlaylist />\n      <hr />\n      <SongPlaylist />\n    </div>\n  );\n}\n","import \"bulma/css/bulma.css\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport { store } from \"./store\";\nimport { Provider } from \"react-redux\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n"],"sourceRoot":""}